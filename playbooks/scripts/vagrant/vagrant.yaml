# Vagrant Test Environment Setup
---
- hosts: 127.0.0.1
  connection: local
  tasks:
  - name: removing existing vagrant hosts
    lineinfile: |
      dest={{repo_path}}/hosts
      regexp='^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=.vagrant/machines/default/virtualbox/private_key$'
      state=absent
  - name: ensure [vagrant] hosts section exists
    lineinfile: |
      dest={{repo_path}}/hosts
      regexp='^[vagrant]$'
      line='[vagrant]'
      create=yes
  - name: configuring ansible hosts file for vagrant
    lineinfile: |
      dest={{repo_path}}/hosts
      regexp='^[vagrant]$'
      line="{{vip}} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=.vagrant/machines/default/virtualbox/private_key"
      insertafter=yes
      create=yes
  - name: configuring vagrant VM's network ip (in Vagrantfile)
    lineinfile: |
      dest={{repo_path}}/Vagrantfile
      regexp='^(\s*)config.vm.network "private_network".*(adapter: \d+)$'
      line='\1config.vm.network "private_network", ip: "{{vip}}", name: "{{vboxnet}}", \2'
      backrefs=yes
  - name: configuring vagrant VM's routing (in Vagrantfile)
    blockinfile:
      dest: '{{repo_path}}/Vagrantfile'
      block: |2
          config.vm.provision "shell",
            run: "always",
            inline: "net_interface=(echo `ip addr show | grep 'inet {{vip}}'`) && route add -net {{vnet}} netmask {{vboxmask}} gw {{vboxip}} ${net_interface[-1]}"
      marker: "  # {mark} ANSIBLE MANAGED BLOCK"
